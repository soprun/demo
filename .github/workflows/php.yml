name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

#      - name: 'Setup PHP'
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite, gd, pdo_mysql, fileinfo, ftp, redis, memcached
#          tools: composer:v2
#          coverage: none

      - name: 'Set composer cache directory'
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: 'Cache Composer packages'
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: 'Validate composer.json and composer.lock'
        run: composer validate --strict

      - name: 'Install dependencies'
        run: composer install --prefer-dist --no-interaction

      - name: 'Execute static analysis'
        run: php ./vendor/bin/phpstan analyse

      - name: 'Execute unit tests'
        run: php -dxdebug.mode=coverage ./vendor/bin/phpunit --testdox --colors=always
