name: 'Continuous integration'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '7.4', '8.0' ]
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Setup PHP'
        id: setup-php
        uses: shivammathur/setup-php@2.7.0
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          extensions: intl
          tools: composer:v2, psalm

      - name: 'Print PHP version'
        run: echo ${{ steps.setup-php.outputs.php-version }

      - name: 'Get composer cache directory'
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: 'Cache dependencies'
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-

      - name: 'Validate composer.json and composer.lock'
        run: composer validate --strict

      - name: 'Install dependencies'
        id: install
        run: composer install --prefer-dist --no-interaction

      - name: 'Lint YAML files'
        if: always() && steps.install.outcome == 'success'
        run: ./bin/console lint:yaml config --parse-tags

      - name: 'Lint Twig templates'
        if: always() && steps.install.outcome == 'success'
        run: ./bin/console lint:twig templates --env=prod

      - name: 'Lint XLIFF translations'
        if: always() && steps.install.outcome == 'success'
        run: ./bin/console lint:xliff translations

      - name: 'Lint Parameters and Services'
        if: always() && steps.install.outcome == 'success'
        run: ./bin/console lint:container --no-debug

      - name: 'Lint Doctrine entities'
        if: always() && steps.install.outcome == 'success'
        run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

      - name: 'Download Symfony CLI'
        if: always() && steps.install.outcome == 'success'
        run: wget https://get.symfony.com/cli/installer -O - | bash

      - name: 'Check if any dependencies are compromised'
        if: always() && steps.install.outcome == 'success'
        run: /home/runner/.symfony/bin/symfony check:security

      - name: 'Run PHPStan'
        if: always() && steps.install.outcome == 'success'
        continue-on-error: true
        run: php ./vendor/bin/phpstan analyse ./src --error-format=checkstyle | cs2pr

      - name: 'Run Psalm'
        if: always() && steps.install.outcome == 'success'
        continue-on-error: true
        run: psalm --output-format=github

      - name: 'Execute unit tests'
        if: always() && steps.install.outcome == 'success'
        continue-on-error: true
        run: ./vendor/bin/phpunit --testdox --colors=always --teamcity test

      - name: 'Execute mutation tests'
        if: always() && steps.install.outcome == 'success'
        continue-on-error: true
        run: ./vendor/bin/infection --coverage=public/reports/infection

#      - name: 'Uploading an archive production artifacts'
#        uses: actions/upload-artifact@v2
#        with:
#          retention-days: 2
#          name: build-dist
#          path: |
#            public/reports/**